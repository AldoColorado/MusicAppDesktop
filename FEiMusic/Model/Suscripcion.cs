/* 
 * FEIMusic API
 *
 * Api que nos permite administrar la aplicacion de musica FEIMusic
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = FEiMusic.Client.SwaggerDateConverter;

namespace FEiMusic.Model
{
    /// <summary>
    /// Suscripcion
    /// </summary>
    [DataContract]
        public partial class Suscripcion :  IEquatable<Suscripcion>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Suscripcion" /> class.
        /// </summary>
        /// <param name="idSuscripcion">idSuscripcion.</param>
        /// <param name="tipo">tipo.</param>
        /// <param name="fechaInicio">fechaInicio.</param>
        /// <param name="fechaFin">fechaFin.</param>
        public Suscripcion(string idSuscripcion = default(string), string tipo = default(string), string fechaInicio = default(string), string fechaFin = default(string))
        {
            this.IdSuscripcion = idSuscripcion;
            this.Tipo = tipo;
            this.FechaInicio = fechaInicio;
            this.FechaFin = fechaFin;
        }
        
        /// <summary>
        /// Gets or Sets IdSuscripcion
        /// </summary>
        [DataMember(Name="idSuscripcion", EmitDefaultValue=false)]
        public string IdSuscripcion { get; set; }

        /// <summary>
        /// Gets or Sets Tipo
        /// </summary>
        [DataMember(Name="tipo", EmitDefaultValue=false)]
        public string Tipo { get; set; }

        /// <summary>
        /// Gets or Sets FechaInicio
        /// </summary>
        [DataMember(Name="fechaInicio", EmitDefaultValue=false)]
        public string FechaInicio { get; set; }

        /// <summary>
        /// Gets or Sets FechaFin
        /// </summary>
        [DataMember(Name="fechaFin", EmitDefaultValue=false)]
        public string FechaFin { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Suscripcion {\n");
            sb.Append("  IdSuscripcion: ").Append(IdSuscripcion).Append("\n");
            sb.Append("  Tipo: ").Append(Tipo).Append("\n");
            sb.Append("  FechaInicio: ").Append(FechaInicio).Append("\n");
            sb.Append("  FechaFin: ").Append(FechaFin).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Suscripcion);
        }

        /// <summary>
        /// Returns true if Suscripcion instances are equal
        /// </summary>
        /// <param name="input">Instance of Suscripcion to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Suscripcion input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IdSuscripcion == input.IdSuscripcion ||
                    (this.IdSuscripcion != null &&
                    this.IdSuscripcion.Equals(input.IdSuscripcion))
                ) && 
                (
                    this.Tipo == input.Tipo ||
                    (this.Tipo != null &&
                    this.Tipo.Equals(input.Tipo))
                ) && 
                (
                    this.FechaInicio == input.FechaInicio ||
                    (this.FechaInicio != null &&
                    this.FechaInicio.Equals(input.FechaInicio))
                ) && 
                (
                    this.FechaFin == input.FechaFin ||
                    (this.FechaFin != null &&
                    this.FechaFin.Equals(input.FechaFin))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IdSuscripcion != null)
                    hashCode = hashCode * 59 + this.IdSuscripcion.GetHashCode();
                if (this.Tipo != null)
                    hashCode = hashCode * 59 + this.Tipo.GetHashCode();
                if (this.FechaInicio != null)
                    hashCode = hashCode * 59 + this.FechaInicio.GetHashCode();
                if (this.FechaFin != null)
                    hashCode = hashCode * 59 + this.FechaFin.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
