/* 
 * FEIMusic API
 *
 * Api que nos permite administrar la aplicacion de musica FEIMusic
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = FEiMusic.Client.SwaggerDateConverter;

namespace FEiMusic.Model
{
    /// <summary>
    /// CancionResponse
    /// </summary>
    [DataContract]
        public partial class CancionResponse :  IEquatable<CancionResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CancionResponse" /> class.
        /// </summary>
        /// <param name="idCancion">idCancion.</param>
        /// <param name="nombreCancion">nombreCancion.</param>
        public CancionResponse(string idCancion = default(string), string nombreCancion = default(string))
        {
            this.IdCancion = idCancion;
            this.NombreCancion = nombreCancion;
        }
        
        /// <summary>
        /// Gets or Sets IdCancion
        /// </summary>
        [DataMember(Name="idCancion", EmitDefaultValue=false)]
        public string IdCancion { get; set; }

        /// <summary>
        /// Gets or Sets NombreCancion
        /// </summary>
        [DataMember(Name="nombreCancion", EmitDefaultValue=false)]
        public string NombreCancion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CancionResponse {\n");
            sb.Append("  IdCancion: ").Append(IdCancion).Append("\n");
            sb.Append("  NombreCancion: ").Append(NombreCancion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CancionResponse);
        }

        /// <summary>
        /// Returns true if CancionResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CancionResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CancionResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IdCancion == input.IdCancion ||
                    (this.IdCancion != null &&
                    this.IdCancion.Equals(input.IdCancion))
                ) && 
                (
                    this.NombreCancion == input.NombreCancion ||
                    (this.NombreCancion != null &&
                    this.NombreCancion.Equals(input.NombreCancion))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IdCancion != null)
                    hashCode = hashCode * 59 + this.IdCancion.GetHashCode();
                if (this.NombreCancion != null)
                    hashCode = hashCode * 59 + this.NombreCancion.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
